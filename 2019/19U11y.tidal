setcps 0.8

let mosnotes = 5
    mospat = map fromIntegral (mos 5 31 53)
in
d1  
$ arpeggiate
$ inside (1/1) ( stutWith 10 (1/1)
(
(|+ note "{106 31 53}%20")
.
(|* sus 0.95)
.
(|* fmamt 1.15)
.
(|+ pan (1/12))
))
$ inside (20*10/20) (spaceOut ((replicate 1 1) ++ [2,4,1,8]))
$ transup 200
$ note (fast 20 $ fromList mospat)
# s "stringtest"
# envcurve "8"
# sus "0.15"
# gain 1.2
# tuning 53
# fmfreq 0.5
# fmamt 2.0
# upbound 410
# lobound (410-212)
# pan (fast 10 $ square)

import Data.Fixed (mod')

import Prelude hiding ((<*), (*>))

let mos notes interval scale = take notes $ iterate ((`mod'` scale) . (+ interval)) 0
    mosp notes interval scale = flatpat $ mos <$> notes <* interval <* scale

let mosnotes = "<5 7>"
    mospat = (mosp mosnotes 31 53)
in
note (fast 20 $ slow mosnotes $ arpeggiate mospat)

